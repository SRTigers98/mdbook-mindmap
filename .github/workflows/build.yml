name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  CARGO_TERM_COLOR: always

jobs:
  analyze:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write
      actions: read

    env:
      SARIF_VERSION: 0.4.0
      RESULT_FILE: rust-clippy-results.sarif

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache sarif crates
        id: cache-sarif
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/
          key: ${{ runner.os }}-sarif-${{ env.SARIF_VERSION }}

      - name: Cache target
        uses: actions/cache@v3
        with:
          path: ./target/
          key: ${{ runner.os }}-clippy-target-${{ hashFiles('./Cargo.toml') }}

      - name: Install sarif crates
        if: steps.cache-sarif.outputs.cache-hit != 'true'
        run: cargo install --version ${{ env.SARIF_VERSION }} clippy-sarif sarif-fmt

      - name: Run clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee ${{ env.RESULT_FILE }} | sarif-fmt

      - name: Upload analysis results
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.RESULT_FILE }}
          wait-for-processing: true

  fmt:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check Code Style
        run: cargo fmt --check

  build:
    runs-on: ubuntu-latest
    needs: [analyze, fmt]

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache target
        uses: actions/cache@v3
        with:
          path: ./target/
          key: ${{ runner.os }}-build-target-${{ hashFiles('./Cargo.toml') }}

      - name: Build
        run: cargo build
